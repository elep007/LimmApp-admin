#!/usr/bin/env python
from __future__ import print_function
import json

from requests_oauthlib import OAuth2Session

try:
    from urllib.parse import urlencode
except ImportError:
    from urllib import urlencode

with open('credentials.json', 'rt') as f:
    credentials = json.load(f)

TOKEN_URL = "https://auth.aweber.com/oauth2/token"

client_id = credentials['client_id']
client_secret = credentials['client_secret']
token = credentials['token']

extra = {
    'client_id': client_id,
    'client_secret': client_secret,
    'token': token
}

def token_updater(token):
    with open('credentials.json', 'wt') as creds_file:
        json.dump({
            'client_id': client_id,
            'client_secret': client_secret,
            'token': token
        }, creds_file)
    print('Token was refreshed.\n'
          'Updated credentials.json with your new credentials')

session = OAuth2Session(
    client_id=credentials['client_id'],
    token=credentials['token'],
    auto_refresh_url=TOKEN_URL,
    auto_refresh_kwargs=extra,
    token_updater=token_updater
)


def get_collection(url):
    collection = []
    while url:
        response = session.get(url)
        response.raise_for_status()
        body = response.json()
        collection.extend(body['entries'])
        # if there is a next link, there are more pages to retrieve
        next_link = body.get('next_collection_link')
        url = next_link if next_link else None
    return collection


# get an account to search on
accounts_url = 'https://api.aweber.com/1.0/accounts'
accounts = get_collection(accounts_url)
account_url = accounts[0]['self_link']  # choose the first account

# find all subscribers across lists that match an email
params = urlencode({
    'email': 'example@example.com',
    'ws.op': 'findSubscribers'
})
find_url = '{}?{}'.format(account_url, params)
found_subscribers = get_collection(find_url)
print(json.dumps(found_subscribers, indent=4))
